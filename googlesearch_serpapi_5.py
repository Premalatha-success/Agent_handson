# -*- coding: utf-8 -*-
"""Googlesearch_serpapi_5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1naPHzSEBBs6FUOmAHYH2CGbAaxcV6m5S
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install --quiet langchain google-search-results

from google.colab import userdata
import os

print("""
To get your SerpAPI API key, you'll need to follow these steps:

1.  **Visit the SerpAPI Website:** Go to https://serpapi.com/ and sign up for a free account.
2.  **Find Your API Key:** Once you're logged in, navigate to your dashboard. You'll find your API key in the "Your Account" section.
3.  **Securely Store Your API Key in Colab:**
    *   In your Colab notebook, click on the "key" icon in the left-hand menu to open the "Secrets" tab.
    *   Click on "Add a new secret".
    *   Enter `SERPAPI_API_KEY` as the name and paste your API key in the "Value" field.
    *   Make sure the "Notebook access" toggle is enabled.
4.  **Access Your API Key in Code:** You can now access your API key in your code like this:
"""),

serpapi_api_key = userdata.get('serpapi')
os.environ['SERPAPI_API_KEY'] = serpapi_api_key

#print("SERPAPI_API_KEY has been set as an environment variable.")

# Commented out IPython magic to ensure Python compatibility.
# %pip install --quiet langchain-community

# Commented out IPython magic to ensure Python compatibility.
# %pip install --quiet langchain-openai

from google.colab import userdata
import os
from langchain.utilities import SerpAPIWrapper
from langchain_openai import ChatOpenAI
from langchain.agents import AgentExecutor, create_react_agent
from langchain import hub
from langchain.tools import Tool

# 1. Ensure that the SERPAPI_API_KEY and OPENAI_API_KEY are correctly set as secrets
#    in Google Colab and accessible via userdata.get().
#    (Assuming these are already set by the user in Colab secrets)
serpapi_api_key = userdata.get('serpapi_1')
os.environ['SERPAPI_API_KEY'] = serpapi_api_key

openai_api_key = userdata.get('july_openai')
os.environ['OPENAI_API_KEY'] = openai_api_key

# 2. Initialize the ChatOpenAI model with temperature=0 and the "gpt-4" model.
llm = ChatOpenAI(temperature=0, model="")

# 3. Create a SerpAPIWrapper instance for searching.
search = SerpAPIWrapper()

# 4. Define a list of tools, including a Tool named "Search" that uses the SerpAPIWrapper.
tools = [
    Tool(
        name="Search",
        func=search.run,
        description="useful for when you need to answer questions about current events",
    )
]

# 5. Pull the "hwchase17/react" prompt from the Langchain hub.
prompt = hub.pull("hwchase17/react")

# 6. Create a ReAct agent using the initialized language model, the defined tools, and the pulled prompt.
agent = create_react_agent(llm, tools, prompt)

# 7. Initialize an AgentExecutor with the created agent and tools, setting verbose=True for detailed output.
agent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True)

# 8. Invoke the agent_executor with an input query, such as "what is the weather in san francisco?", to demonstrate its usage.
agent_executor.invoke({"input": "what is the weather in san francisco?"})

